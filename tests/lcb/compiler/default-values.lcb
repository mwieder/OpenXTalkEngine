/*
Copyright (C) 2016 LiveCode Ltd.

This file is part of LiveCode.

LiveCode is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License v3 as published by the Free
Software Foundation.

LiveCode is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with LiveCode.  If not see <http://www.gnu.org/licenses/>.  */

module com.livecode.compiler.default_values.tests

variable sBoolean as Boolean
variable sOptionalString as optional String
variable sVariant

public handler TestDefaultValueOfBoolean()
	variable tBoolean as Boolean
	test "default value (boolean)" when tBoolean is false
end handler

public handler TestDefaultValueOfNumber()
	variable tNumber as Number
	test "default value (number)" when tNumber is 0.0
end handler

public handler TestDefaultValueOfString()
	variable tString as String
	test "default value (string)" when tString is ""
end handler

public handler TestDefaultValueOfData()
	variable tData as Data
	test "default value (boolean)" when tData is the empty data
end handler

public handler TestDefaultValueOfArray()
	variable tArray as Array

	-- We don't have array equality yet, so check the number of elements
	test "default value (array)" when the number of elements in tArray is 0
end handler

public handler TestDefaultValueOfOptional()
	variable tOptional as optional any
	test "default value (optional)" when tOptional is nothing
end handler

public handler TestDefaultValueOfUntyped()
	variable tVar
	test "default value (untyped)" when tVar is nothing
end handler

public handler TestDefaultValueOfModuleVariable()
	test "default value (boolean)" when sBoolean is false
	test "default value (optional)" when sOptionalString is nothing
	test "default value (untyped)" when sVariant is nothing
end handler

private handler DoTestDefaultValueOfOutParameter(out rValue as Boolean)
end handler

public handler TestDefaultValueOfOutParameter()
   variable tValue
   DoTestDefaultValueOfOutParameter(tValue)
   test "default value of parameter (boolean)" when tValue is false
end handler

end module
